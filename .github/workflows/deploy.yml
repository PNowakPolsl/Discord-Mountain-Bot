name: Deploy Discord Bot

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Build Docker image?'
        required: false
        default: 'true'
          operation:
        description: 'Operation to perform (Install, Uninstall, Reinstall)'
        required: false
        default: 'Reinstall'
        options:
          - Install
          - Uninstall
          - Reinstall


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Show selected inputs
      run: |
        echo "Build image: ${{ github.event.inputs.build_image || 'true' }}"
        echo "Operation: ${{ github.event.inputs.operation || 'Reinstall' }}"

    - name: Build Docker image
      if: ${{ github.event.inputs.build_image != 'false' || github.event_name == 'push' }}
      run: docker build -t discord-bot .

    - name: Run operation
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      run: |
        echo "Selected operation: ${{ github.event.inputs.operation || 'Reinstall' }}"

        if [ "${{ github.event.inputs.operation || 'Reinstall' }}" = "Install" ]; then
          echo "Installing bot..."
          docker run -e DISCORD_TOKEN=${DISCORD_TOKEN} discord-bot
        elif [ "${{ github.event.inputs.operation || 'Reinstall' }}" = "Uninstall" ]; then
          echo "Uninstalling bot... (custom logic here)"
          exit 0
        else
          echo "Reinstalling bot..."
          docker run -e DISCORD_TOKEN=${DISCORD_TOKEN} discord-bot
        fi
