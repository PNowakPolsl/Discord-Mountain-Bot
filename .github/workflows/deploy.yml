name: Discord Bot CI/CD

on:
  push:
    branches: ["master"]
  workflow_dispatch:
    inputs:
      build_image:
        description: "Build Docker image?"
        required: false
        default: "true"
      operation:
        description: "Operation to perform"
        required: false
        default: "Reinstall"
        type: choice
        options:
          - Install
          - Uninstall
          - Reinstall

jobs:
  test:
    name: Run tests and linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies for testing
        run: |
          pip install -r requirements.txt
          pip install pytest black

      - name: Run pytest
        run: pytest test_bot.py

      - name: Check formatting with black
        run: black --check .

  build:
    name: Build and push Docker image
    needs: test
    runs-on: ubuntu-latest
    if: ${{ needs.test.result == 'success' && (github.event.inputs.build_image != 'false' || github.event_name == 'push') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner | toLower }}/discord-bot:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    name: Deploy the bot
    needs: build
    runs-on: ubuntu-latest  # change to 'self-hosted' for self-hosted runner (e.g., your PC or VM)

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull and run Docker image
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner | toLower }}/discord-bot:latest
          echo "Operation selected: ${{ github.event.inputs.operation || 'Reinstall' }}"

          docker pull $IMAGE_NAME

          if [ "${{ github.event.inputs.operation || 'Reinstall' }}" = "Install" ]; then
            echo "Installing bot..."
            docker run -d --name discord-bot -e DISCORD_TOKEN=$DISCORD_TOKEN $IMAGE_NAME

          elif [ "${{ github.event.inputs.operation || 'Reinstall' }}" = "Uninstall" ]; then
            echo "Stopping and removing bot..."
            docker stop discord-bot || true
            docker rm discord-bot || true

          else
            echo "Reinstalling bot..."
            docker stop discord-bot || true
            docker rm discord-bot || true
            docker run -d --name discord-bot -e DISCORD_TOKEN=$DISCORD_TOKEN $IMAGE_NAME
